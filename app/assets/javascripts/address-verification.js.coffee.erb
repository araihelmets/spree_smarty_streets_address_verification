#= require address-verification-overrides

$ = jQuery

smarty_key = '<%= ENV['SMARTY_STREETS_WEBSITE_KEY'] %>'
return if smarty_key == ''

# In theory everything below *should* be replaceable with just:
#
#   jQuery.LiveAddress key: smarty_key, enforceVerification: true, autoVerify: false
#
# But because of a bug in the SmartyStreets plugin we have a lot more code.
# The country field can be a drop-down but the plugin looks at the "id" not
# the visual label (the state dropdown is better as it looks at the label).
# This means when the US is selected the plugin thinks the country selected
# is "232". Since it doesn't know "232" is the United States it thinks it is
# a foreign country and therefore doesn't do auto-complete or address
# validation.
#
# To work around this we have removed the country from the list of fields that
# the plugin will scan for when mapping a form for address fields. Since there
# is no country (from the plugin's perspective) it *assumes* the US (since
# that is really the only thing it can auto-complete and validate anyway).
# This works around the problem.
#
# But now we have an additional problem. If the user wants to select a
# different country, it will still assume we are in the US and will tell the user
# that the address is invalid even though it may be a perfectly valid foreign
# address. To deal with this we disable the address validation if foreign.
#
# If the address started as foreign then switches to US ideally we would like
# to re-enable the validation but due to another bug in SmartyStreets it doesn't
# handle the state select list being dynamically updated. In that case we leave
# it disabled and rely on server-side validation.

service = null
permanently_disabled = {}

$(document).on 'ready page:load', ->
  return unless $.LiveAddress
  service = $.LiveAddress
    key: smarty_key, debug: false, enforceVerification: false, autoVerify: false,
    fieldSelector: 'input[type=text], input:not([type]), textarea, select:not([name*="country_id"])'

  for country in $ 'select[name*="country_id"]'
    validator = smarty_validator_for country
    us_address = $(country).find('option:selected').text().match /united states/i
    smarty_disable country, true unless us_address

# Allows 3rd pary code to inform the plugin that Smarty Streets might need to
# be activate. It still won't necessarily activate (if a non-US country) but
# it hands the control to the plugin. Hand any field that is part of the
# validated address.
@smarty_enable = (field) ->
  validator = smarty_validator_for field
  return unless validator
  return if validator.active
  return if permanently_disabled[validator.id()]
  service.activate validator.id()

# Will explicitly disable the address validation for the given address. Can be
# any field from the address.
@smarty_disable = (field, keep_disabled=false) ->
  validator = smarty_validator_for field
  return unless validator
  return unless validator.active
  permanently_disabled[validator.id()] = true if keep_disabled
  service.deactivate validator.id()

# Finds the validator associated with the given field
smarty_validator_for = (field) ->
  # Country won't be part of the field list so if country was given replace
  # with primary address
  field = $('#' + field.id.replace(/country_id/, 'address1'))[0] if field.id.match /country_id/

  # Loop through the validators and find the one which contains the field given
  for validator in service.getMappedAddresses()
    for key, fld of validator.getDomFields()
      return validator if field == fld
